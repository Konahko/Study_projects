Для работы программы потребуется ВПН соединение за сетевым экраном Роскомнадзора

Данная программа - парсер сообщений присылаемых на телеграм бота @TukayT_bot

Программа использует библиотеку JSON FOR MODERN C++. Исходный код тут
https://github.com/nlohmann/json

используемые вшитые библиотеки
#include "iostream"
#include "thread"
#include "string"
#include <time.h>
#include <conio.h>

#include <vector>

#include <windows.h>
#include "wininet.h";

В общем смысле алгоритм программы выглядит следующим образом 

При запуске программы инициализируется класс Server и вызывается метод start;

Данный метод создает поток sr и передаёт в него функцию server1; 
Сам же метод остается для приёма нажатий каких либо кнопок.
В случае прирывания работы метода, функция будет принудительно закрыта.

Сервер проверяет сообщения каждые 5 секунд. Многопоточность требуется для того, чтобы программа не зависала при выполнении своих функций и из неё можно было выйти.

При запуске функции Server1 инициализируется достаточно большое количество переменных.
Запускается бесконечный цикл.
Выводится время в формате H:mm:ss.

Происходит иниациализация HTTP Sessions
В момент иниациализации сессии, генерируется запрос, который необходимо будет передать.
Происходит передача запроса, запись результата, сбивание всех настроек подключения и вывод его результата в string.
Подключение закрывается

В случае, если в момент иниациализации произошли какие либо ошибки, происходит вывод сообщения - оповещения с ошибкой и выводом номера ошибки.
Следом проверяется наличие какого либо ответа, в случае если ответ не был получен, выводится сообщение об ошибке получения ответа.

Иниациализируются 3 различных Json объекта
Проверяется параметр ok - говорящий о состоянии выполнении запроса
В случае если запрос не выполнен, выводится ошибка о выполнении запроса,
иначе :
проверяется наличие ответа, в самом запросе.

Из за ограничений библиотеки Json for modern c++, она не умеет определять json внутри json-а, поэтому происходит разделение их в ручную.

Инициализируются переменные, необходимые для разделения, а так же вектор в формате String для записи объектов.
Происходит анализ текста, в результате которого несколько json объектов, в текстовом формате, передаются в вектор для дальнейшей обработки.

Далее происходит обработка каждого полученного вектора.
Происходит анализ каждого вектора и перезаписывание их в переменные типа Json. Из объектов выделяются дампы данных, которые перезаписываются в переменны. Эти дампы - информация о пользователях, типах полученных сообщениях и т.д

Далее происходит иниациализация нового HTTP Session которая служит уже для отправки сообщений. После отправки запроса, сразу же происходит проверка на выполнение запроса, в случае выполнения или не выполнения запроса, будет выводиться соответстующее сообщение.
Происходит отчистка вектора

Поток замирает на 5 секунд.
